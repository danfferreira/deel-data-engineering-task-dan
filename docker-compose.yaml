services:
  transactions-db:
    build:
      context: ./docker/postgres-db
    environment:
      - POSTGRES_USER=finance_db_user
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=finance_db
    volumes:
      - db-data:/var/lib/postgresql/data
      - "${PWD}/db-scripts/initialize_db_ddl.sql:/docker-entrypoint-initdb.d/initialize_db_ddl.sql"
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "wal_level=logical", "-c", "hot_standby=on"]
    networks:
      - shared-network

  db-sink:
    image: postgres:13
    container_name: database-sink
    environment:
      - POSTGRES_USER=sink_user
      - POSTGRES_PASSWORD=sink_password
      - POSTGRES_DB=sink_db
    volumes:
      - db-sink-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - shared-network  

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shared-network  

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - shared-network  

  flink-jobmanager:
    build:
      context: ./docker/flink
    container_name: flink-jobmanager
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    volumes:
      - "${PWD}/jobs:/jobs"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - shared-network  

  flink-taskmanager:
    build:
      context: ./docker/flink
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=10
    networks:
      - shared-network  

  kafka-connect:
    image: debezium/connect:1.9
    container_name: kafka-connect
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      REST_PORT: "8083"
      GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-statuses"
      KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      STATUS_STORAGE_REPLICATION_FACTOR: "1"
      PLUGIN_PATH: "/kafka/connect"
    restart: on-failure
    networks:
      - shared-network

volumes:
  db-data:
  db-sink-data:

networks:
  shared-network:
    driver: bridge